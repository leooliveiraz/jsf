package entidades;

// Generated 17/10/2015 19:11:37 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AutorizacaoSaida generated by hbm2java
 */
@Entity
@Table(name = "autorizacao_saida", catalog = "rfid_maternidade")
public class AutorizacaoSaida implements java.io.Serializable {

	private AutorizacaoSaidaId id;
	private Usuario usuario;
	private Atendimento atendimento;
	private String dsAutorizacaoSaida;
	private String snCancelado;
	private Date dtCancelado;

	public AutorizacaoSaida() {
	}

	public AutorizacaoSaida(AutorizacaoSaidaId id, Usuario usuario,
			Atendimento atendimento) {
		this.id = id;
		this.usuario = usuario;
		this.atendimento = atendimento;
	}

	public AutorizacaoSaida(AutorizacaoSaidaId id, Usuario usuario,
			Atendimento atendimento, String dsAutorizacaoSaida,
			String snCancelado, Date dtCancelado) {
		this.id = id;
		this.usuario = usuario;
		this.atendimento = atendimento;
		this.dsAutorizacaoSaida = dsAutorizacaoSaida;
		this.snCancelado = snCancelado;
		this.dtCancelado = dtCancelado;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "cdAutorizacaoSaida", column = @Column(name = "cd_autorizacao_saida", nullable = false)),
			@AttributeOverride(name = "usuarioCdUsuario", column = @Column(name = "usuario_cd_usuario", nullable = false, length = 20)) })
	public AutorizacaoSaidaId getId() {
		return this.id;
	}

	public void setId(AutorizacaoSaidaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuario_cd_usuario", nullable = false, insertable = false, updatable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "atendimento_cd_atendimento", nullable = false)
	public Atendimento getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(Atendimento atendimento) {
		this.atendimento = atendimento;
	}

	@Column(name = "ds_autorizacao_saida", length = 100)
	public String getDsAutorizacaoSaida() {
		return this.dsAutorizacaoSaida;
	}

	public void setDsAutorizacaoSaida(String dsAutorizacaoSaida) {
		this.dsAutorizacaoSaida = dsAutorizacaoSaida;
	}

	@Column(name = "sn_cancelado", length = 1)
	public String getSnCancelado() {
		return this.snCancelado;
	}

	public void setSnCancelado(String snCancelado) {
		this.snCancelado = snCancelado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_cancelado", length = 19)
	public Date getDtCancelado() {
		return this.dtCancelado;
	}

	public void setDtCancelado(Date dtCancelado) {
		this.dtCancelado = dtCancelado;
	}

}
